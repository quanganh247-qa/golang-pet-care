// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0

package db

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Appointment struct {
<<<<<<< HEAD
	AppointmentID     int64            `json:"appointment_id"`
	Petid             pgtype.Int8      `json:"petid"`
	Username          pgtype.Text      `json:"username"`
	DoctorID          pgtype.Int8      `json:"doctor_id"`
	ServiceID         pgtype.Int8      `json:"service_id"`
	Date              pgtype.Timestamp `json:"date"`
	ReminderSend      pgtype.Bool      `json:"reminder_send"`
	TimeSlotID        pgtype.Int8      `json:"time_slot_id"`
	CreatedAt         pgtype.Timestamp `json:"created_at"`
	StateID           pgtype.Int4      `json:"state_id"`
	AppointmentReason pgtype.Text      `json:"appointment_reason"`
	Priority          pgtype.Text      `json:"priority"`
	ArrivalTime       pgtype.Timestamp `json:"arrival_time"`
	RoomID            pgtype.Int8      `json:"room_id"`
	ConfirmationSent  pgtype.Bool      `json:"confirmation_sent"`
	Notes             pgtype.Text      `json:"notes"`
	UpdatedAt         pgtype.Timestamp `json:"updated_at"`
}

type Cart struct {
	ID        int64            `json:"id"`
	UserID    int64            `json:"user_id"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
	UpdatedAt pgtype.Timestamp `json:"updated_at"`
}

type CartItem struct {
	ID         int64         `json:"id"`
	CartID     int64         `json:"cart_id"`
	ProductID  int64         `json:"product_id"`
	Quantity   pgtype.Int4   `json:"quantity"`
	UnitPrice  float64       `json:"unit_price"`
	TotalPrice pgtype.Float8 `json:"total_price"`
=======
	AppointmentID int64            `json:"appointment_id"`
	Petid         pgtype.Int8      `json:"petid"`
	DoctorID      pgtype.Int8      `json:"doctor_id"`
	ServiceID     pgtype.Int8      `json:"service_id"`
	Date          pgtype.Timestamp `json:"date"`
	Status        pgtype.Text      `json:"status"`
	Notes         pgtype.Text      `json:"notes"`
	ReminderSend  pgtype.Bool      `json:"reminder_send"`
	TimeSlotID    pgtype.Int8      `json:"time_slot_id"`
	CreatedAt     pgtype.Timestamp `json:"created_at"`
>>>>>>> 272832d (redis cache)
}

type Cart struct {
	ID        int64            `json:"id"`
	UserID    int64            `json:"user_id"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
	UpdatedAt pgtype.Timestamp `json:"updated_at"`
}

type Cartitem struct {
	ID         int64         `json:"id"`
	CartID     int64         `json:"cart_id"`
	ProductID  int64         `json:"product_id"`
	Quantity   pgtype.Int4   `json:"quantity"`
	UnitPrice  float64       `json:"unit_price"`
	TotalPrice pgtype.Float8 `json:"total_price"`
}

type Checkout struct {
	CheckoutID    int64            `json:"checkout_id"`
	Petid         pgtype.Int8      `json:"petid"`
	DoctorID      pgtype.Int8      `json:"doctor_id"`
	Date          pgtype.Timestamp `json:"date"`
	TotalTmount   float64          `json:"total_tmount"`
	PaymentStatus pgtype.Text      `json:"payment_status"`
	PaymentMethod pgtype.Text      `json:"payment_method"`
	Notes         pgtype.Text      `json:"notes"`
}

type CheckoutService struct {
	CheckoutserviceID int64         `json:"checkoutservice_id"`
	Checkoutid        pgtype.Int8   `json:"checkoutid"`
	Serviceid         pgtype.Int8   `json:"serviceid"`
	Quantity          pgtype.Int4   `json:"quantity"`
	Unitprice         pgtype.Float8 `json:"unitprice"`
	Subtotal          pgtype.Float8 `json:"subtotal"`
}

<<<<<<< HEAD
type Clinic struct {
	ID      int64       `json:"id"`
	Name    pgtype.Text `json:"name"`
	Address pgtype.Text `json:"address"`
	Phone   pgtype.Text `json:"phone"`
}

type Consultation struct {
	ID            int32            `json:"id"`
	AppointmentID pgtype.Int8      `json:"appointment_id"`
	Subjective    pgtype.Text      `json:"subjective"`
	Objective     pgtype.Text      `json:"objective"`
	Assessment    pgtype.Text      `json:"assessment"`
	Plan          pgtype.Int8      `json:"plan"`
	CreatedAt     pgtype.Timestamp `json:"created_at"`
}

type DeviceToken struct {
=======
type Devicetoken struct {
>>>>>>> 0fb3f30 (user images)
	ID         int64            `json:"id"`
	Username   string           `json:"username"`
	Token      string           `json:"token"`
	DeviceType pgtype.Text      `json:"device_type"`
	CreatedAt  pgtype.Timestamp `json:"created_at"`
	LastUsedAt pgtype.Timestamp `json:"last_used_at"`
	ExpiredAt  pgtype.Timestamp `json:"expired_at"`
}

<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 6c35562 (dicease and treatment plan)
type Disease struct {
	ID          int64              `json:"id"`
	Name        string             `json:"name"`
	Description pgtype.Text        `json:"description"`
	Symptoms    []byte             `json:"symptoms"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
}

<<<<<<< HEAD
=======
>>>>>>> 0fb3f30 (user images)
=======
type DiseaseMedicine struct {
	DiseaseID  int64 `json:"disease_id"`
	MedicineID int64 `json:"medicine_id"`
}

>>>>>>> 6c35562 (dicease and treatment plan)
type Doctor struct {
	ID                int64       `json:"id"`
	UserID            int64       `json:"user_id"`
	Specialization    pgtype.Text `json:"specialization"`
	YearsOfExperience pgtype.Int4 `json:"years_of_experience"`
	Education         pgtype.Text `json:"education"`
	CertificateNumber pgtype.Text `json:"certificate_number"`
	Bio               pgtype.Text `json:"bio"`
}

type File struct {
	ID         int64            `json:"id"`
	FileName   string           `json:"file_name"`
	FilePath   string           `json:"file_path"`
	FileSize   int64            `json:"file_size"`
	FileType   string           `json:"file_type"`
	UploadedAt pgtype.Timestamp `json:"uploaded_at"`
	UserID     pgtype.Int8      `json:"user_id"`
}

type MedicalHistory struct {
	ID              int64            `json:"id"`
	MedicalRecordID pgtype.Int8      `json:"medical_record_id"`
	Condition       pgtype.Text      `json:"condition"`
	DiagnosisDate   pgtype.Timestamp `json:"diagnosis_date"`
	Notes           pgtype.Text      `json:"notes"`
	Treatment       pgtype.Int8      `json:"treatment"`
	CreatedAt       pgtype.Timestamp `json:"created_at"`
	UpdatedAt       pgtype.Timestamp `json:"updated_at"`
}

<<<<<<< HEAD
<<<<<<< HEAD
type MedicalRecord struct {
	ID        int64            `json:"id"`
	PetID     pgtype.Int8      `json:"pet_id"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
	UpdatedAt pgtype.Timestamp `json:"updated_at"`
}

type Medicine struct {
	ID             int64              `json:"id"`
	Name           string             `json:"name"`
	Description    pgtype.Text        `json:"description"`
	Usage          pgtype.Text        `json:"usage"`
	Dosage         pgtype.Text        `json:"dosage"`
	Frequency      pgtype.Text        `json:"frequency"`
	Duration       pgtype.Text        `json:"duration"`
	SideEffects    pgtype.Text        `json:"side_effects"`
	StartDate      pgtype.Date        `json:"start_date"`
	EndDate        pgtype.Date        `json:"end_date"`
	CreatedAt      pgtype.Timestamptz `json:"created_at"`
	UpdatedAt      pgtype.Timestamptz `json:"updated_at"`
	ExpirationDate pgtype.Date        `json:"expiration_date"`
	Quantity       pgtype.Int8        `json:"quantity"`
}

type Notification struct {
	ID          int64            `json:"id"`
	Username    string           `json:"username"`
	Title       string           `json:"title"`
	Content     pgtype.Text      `json:"content"`
	IsRead      pgtype.Bool      `json:"is_read"`
	RelatedID   pgtype.Int4      `json:"related_id"`
	RelatedType pgtype.Text      `json:"related_type"`
	Datetime    pgtype.Timestamp `json:"datetime"`
	NotifyType  pgtype.Text      `json:"notify_type"`
}

type Order struct {
	ID              int64            `json:"id"`
	UserID          int64            `json:"user_id"`
	OrderDate       pgtype.Timestamp `json:"order_date"`
	TotalAmount     float64          `json:"total_amount"`
	PaymentStatus   pgtype.Text      `json:"payment_status"`
	CartItems       []byte           `json:"cart_items"`
	ShippingAddress pgtype.Text      `json:"shipping_address"`
	Notes           pgtype.Text      `json:"notes"`
=======
type Feedingschedule struct {
	Feedingscheduleid int64            `json:"feedingscheduleid"`
	Petid             pgtype.Int8      `json:"petid"`
	Mealtime          pgtype.Time      `json:"mealtime"`
	Foodtype          string           `json:"foodtype"`
	Quantity          float64          `json:"quantity"`
	Frequency         string           `json:"frequency"`
	Lastfed           pgtype.Timestamp `json:"lastfed"`
	Notes             pgtype.Text      `json:"notes"`
	Isactive          pgtype.Bool      `json:"isactive"`
}

<<<<<<< HEAD
type Medication struct {
	MedicationID   int64            `json:"medication_id"`
	PetID          int64            `json:"pet_id"`
	MedicationName string           `json:"medication_name"`
	Dosage         string           `json:"dosage"`
	Frequency      string           `json:"frequency"`
	StartDate      pgtype.Timestamp `json:"start_date"`
	EndDate        pgtype.Timestamp `json:"end_date"`
	Notes          pgtype.Text      `json:"notes"`
>>>>>>> 79a3bcc (medicine api)
=======
=======
>>>>>>> 272832d (redis cache)
type Medicine struct {
	ID          int64              `json:"id"`
	Name        string             `json:"name"`
	Description pgtype.Text        `json:"description"`
	Usage       pgtype.Text        `json:"usage"`
	Dosage      pgtype.Text        `json:"dosage"`
	Frequency   pgtype.Text        `json:"frequency"`
	Duration    pgtype.Text        `json:"duration"`
	SideEffects pgtype.Text        `json:"side_effects"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
>>>>>>> 6c35562 (dicease and treatment plan)
}

type Notification struct {
	Notificationid int64            `json:"notificationid"`
	Username       string           `json:"username"`
	Title          string           `json:"title"`
	Description    pgtype.Text      `json:"description"`
	Datetime       pgtype.Timestamp `json:"datetime"`
	IsRead         pgtype.Bool      `json:"is_read"`
}

type Order struct {
	ID              int64            `json:"id"`
	UserID          int64            `json:"user_id"`
	OrderDate       pgtype.Timestamp `json:"order_date"`
	TotalAmount     float64          `json:"total_amount"`
	PaymentStatus   pgtype.Text      `json:"payment_status"`
	CartItems       []byte           `json:"cart_items"`
	ShippingAddress pgtype.Text      `json:"shipping_address"`
	Notes           pgtype.Text      `json:"notes"`
}

type Pet struct {
	Petid           int64         `json:"petid"`
	Name            string        `json:"name"`
	Type            string        `json:"type"`
	Breed           pgtype.Text   `json:"breed"`
	Age             pgtype.Int4   `json:"age"`
	Gender          pgtype.Text   `json:"gender"`
	Healthnotes     pgtype.Text   `json:"healthnotes"`
	Weight          pgtype.Float8 `json:"weight"`
	BirthDate       pgtype.Date   `json:"birth_date"`
	Username        string        `json:"username"`
	MicrochipNumber pgtype.Text   `json:"microchip_number"`
	LastCheckupDate pgtype.Date   `json:"last_checkup_date"`
	IsActive        pgtype.Bool   `json:"is_active"`
	DataImage       []byte        `json:"data_image"`
<<<<<<< HEAD
<<<<<<< HEAD
	OriginalImage   pgtype.Text   `json:"original_image"`
=======
	OriginalImage   string        `json:"original_image"`
>>>>>>> 0fb3f30 (user images)
=======
	OriginalImage   pgtype.Text   `json:"original_image"`
}

type PetLog struct {
	LogID    int64            `json:"log_id"`
	Petid    int64            `json:"petid"`
	Datetime pgtype.Timestamp `json:"datetime"`
	Title    pgtype.Text      `json:"title"`
	Notes    pgtype.Text      `json:"notes"`
}

type PetSchedule struct {
<<<<<<< HEAD
	ID           int64            `json:"id"`
	PetID        pgtype.Int8      `json:"pet_id"`
	ScheduleType string           `json:"schedule_type"`
	EventTime    pgtype.Timestamp `json:"event_time"`
	Duration     pgtype.Text      `json:"duration"`
	FoodType     pgtype.Text      `json:"food_type"`
	Quantity     pgtype.Float8    `json:"quantity"`
	ActivityType pgtype.Text      `json:"activity_type"`
	Frequency    pgtype.Text      `json:"frequency"`
	Notes        pgtype.Text      `json:"notes"`
	CreatedAt    pgtype.Timestamp `json:"created_at"`
	IsActive     pgtype.Bool      `json:"is_active"`
>>>>>>> 272832d (redis cache)
=======
	ID               int64            `json:"id"`
	PetID            pgtype.Int8      `json:"pet_id"`
	Title            pgtype.Text      `json:"title"`
	ReminderDatetime pgtype.Timestamp `json:"reminder_datetime"`
	EventRepeat      pgtype.Text      `json:"event_repeat"`
	EndType          pgtype.Text      `json:"end_type"`
	EndDate          pgtype.Date      `json:"end_date"`
	Notes            pgtype.Text      `json:"notes"`
	CreatedAt        pgtype.Timestamp `json:"created_at"`
>>>>>>> 3835eb4 (update pet_schedule api)
}

<<<<<<< HEAD
type PetAllergy struct {
	ID     int64       `json:"id"`
	PetID  pgtype.Int8 `json:"pet_id"`
	Type   pgtype.Text `json:"type"`
	Detail pgtype.Text `json:"detail"`
}

<<<<<<< HEAD
type PetLog struct {
	LogID    int64            `json:"log_id"`
	Petid    int64            `json:"petid"`
	Datetime pgtype.Timestamp `json:"datetime"`
	Title    pgtype.Text      `json:"title"`
	Notes    pgtype.Text      `json:"notes"`
}

type PetSchedule struct {
	ID               int64            `json:"id"`
	PetID            pgtype.Int8      `json:"pet_id"`
	Title            pgtype.Text      `json:"title"`
	ReminderDatetime pgtype.Timestamp `json:"reminder_datetime"`
	EventRepeat      pgtype.Text      `json:"event_repeat"`
	EndType          pgtype.Bool      `json:"end_type"`
	EndDate          pgtype.Date      `json:"end_date"`
	Notes            pgtype.Text      `json:"notes"`
	IsActive         pgtype.Bool      `json:"is_active"`
	CreatedAt        pgtype.Timestamp `json:"created_at"`
<<<<<<< HEAD
<<<<<<< HEAD
=======
	IsActive         pgtype.Bool      `json:"is_active"`
>>>>>>> eb8d761 (updated pet schedule)
=======
>>>>>>> 9fd7fc8 (feat: validate notification schema and APIs)
	Removedat        pgtype.Timestamp `json:"removedat"`
}

type PetTreatment struct {
	ID          int64              `json:"id"`
	PetID       pgtype.Int8        `json:"pet_id"`
	DiseaseID   pgtype.Int8        `json:"disease_id"`
	StartDate   pgtype.Date        `json:"start_date"`
	EndDate     pgtype.Date        `json:"end_date"`
	Status      pgtype.Text        `json:"status"`
	Name        pgtype.Text        `json:"name"`
	Type        pgtype.Text        `json:"type"`
	Description pgtype.Text        `json:"description"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	DoctorID    pgtype.Int4        `json:"doctor_id"`
}

type PhaseMedicine struct {
	PhaseID    int64              `json:"phase_id"`
	MedicineID int64              `json:"medicine_id"`
	Dosage     pgtype.Text        `json:"dosage"`
	Frequency  pgtype.Text        `json:"frequency"`
	Duration   pgtype.Text        `json:"duration"`
	Notes      pgtype.Text        `json:"notes"`
	CreatedAt  pgtype.Timestamptz `json:"created_at"`
	Quantity   pgtype.Int4        `json:"quantity"`
	IsReceived pgtype.Bool        `json:"is_received"`
}

type Product struct {
	ProductID     int64            `json:"product_id"`
	Name          string           `json:"name"`
	Description   pgtype.Text      `json:"description"`
	Price         float64          `json:"price"`
	StockQuantity pgtype.Int4      `json:"stock_quantity"`
	Category      pgtype.Text      `json:"category"`
	DataImage     []byte           `json:"data_image"`
	OriginalImage pgtype.Text      `json:"original_image"`
	CreatedAt     pgtype.Timestamp `json:"created_at"`
	IsAvailable   pgtype.Bool      `json:"is_available"`
	RemovedAt     pgtype.Timestamp `json:"removed_at"`
}

type Room struct {
	ID                   int64            `json:"id"`
	Name                 string           `json:"name"`
	Type                 string           `json:"type"`
	Status               pgtype.Text      `json:"status"`
	CurrentAppointmentID pgtype.Int8      `json:"current_appointment_id"`
	AvailableAt          pgtype.Timestamp `json:"available_at"`
}

=======
>>>>>>> 0fb3f30 (user images)
=======
type PetTreatment struct {
	ID        int64              `json:"id"`
	PetID     pgtype.Int8        `json:"pet_id"`
	DiseaseID pgtype.Int8        `json:"disease_id"`
	StartDate pgtype.Date        `json:"start_date"`
	EndDate   pgtype.Date        `json:"end_date"`
	Status    pgtype.Text        `json:"status"`
	Notes     pgtype.Text        `json:"notes"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
}

type PhaseMedicine struct {
	PhaseID    int64       `json:"phase_id"`
	MedicineID int64       `json:"medicine_id"`
	Dosage     pgtype.Text `json:"dosage"`
	Frequency  pgtype.Text `json:"frequency"`
	Duration   pgtype.Text `json:"duration"`
	Notes      pgtype.Text `json:"notes"`
}

<<<<<<< HEAD
>>>>>>> 6c35562 (dicease and treatment plan)
=======
type Product struct {
	ProductID     int64            `json:"product_id"`
	Name          string           `json:"name"`
	Description   pgtype.Text      `json:"description"`
	Price         float64          `json:"price"`
	StockQuantity pgtype.Int4      `json:"stock_quantity"`
	Category      pgtype.Text      `json:"category"`
	DataImage     []byte           `json:"data_image"`
	OriginalImage pgtype.Text      `json:"original_image"`
	CreatedAt     pgtype.Timestamp `json:"created_at"`
	IsAvailable   pgtype.Bool      `json:"is_available"`
	RemovedAt     pgtype.Timestamp `json:"removed_at"`
}

>>>>>>> c449ffc (feat: cart api)
type Service struct {
	ID          int64            `json:"id"`
	Name        pgtype.Text      `json:"name"`
	Description pgtype.Text      `json:"description"`
	Duration    pgtype.Int2      `json:"duration"`
	Cost        pgtype.Float8    `json:"cost"`
	Category    pgtype.Text      `json:"category"`
	Priority    pgtype.Int2      `json:"priority"`
	CreatedAt   pgtype.Timestamp `json:"created_at"`
}

type Shift struct {
	ID               int64            `json:"id"`
	DoctorID         int64            `json:"doctor_id"`
	StartTime        pgtype.Timestamp `json:"start_time"`
	EndTime          pgtype.Timestamp `json:"end_time"`
	MaxPatients      pgtype.Int4      `json:"max_patients"`
	AssignedPatients pgtype.Int4      `json:"assigned_patients"`
	CreatedAt        pgtype.Timestamp `json:"created_at"`
}

type State struct {
	ID        int64            `json:"id"`
	State     string           `json:"state"`
	CreatedAt pgtype.Timestamp `json:"created_at"`
	UpdatedAt pgtype.Timestamp `json:"updated_at"`
}

<<<<<<< HEAD
<<<<<<< HEAD
type TimeSlot struct {
	ID             int64            `json:"id"`
	DoctorID       int32            `json:"doctor_id"`
	Date           pgtype.Date      `json:"date"`
	StartTime      pgtype.Time      `json:"start_time"`
	EndTime        pgtype.Time      `json:"end_time"`
	MaxPatients    pgtype.Int4      `json:"max_patients"`
	BookedPatients pgtype.Int4      `json:"booked_patients"`
	CreatedAt      pgtype.Timestamp `json:"created_at"`
	UpdatedAt      pgtype.Timestamp `json:"updated_at"`
	ShiftID        int64            `json:"shift_id"`
}

type TreatmentPhase struct {
	ID          int64              `json:"id"`
	TreatmentID pgtype.Int8        `json:"treatment_id"`
	PhaseName   pgtype.Text        `json:"phase_name"`
	Description pgtype.Text        `json:"description"`
	Status      pgtype.Text        `json:"status"`
	StartDate   pgtype.Date        `json:"start_date"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
}

=======
>>>>>>> 0fb3f30 (user images)
=======
type TreatmentPhase struct {
	ID          int64              `json:"id"`
	DiseaseID   pgtype.Int8        `json:"disease_id"`
	PhaseNumber pgtype.Int4        `json:"phase_number"`
	PhaseName   pgtype.Text        `json:"phase_name"`
	Description pgtype.Text        `json:"description"`
	Duration    pgtype.Text        `json:"duration"`
	Notes       pgtype.Text        `json:"notes"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
}

type TreatmentProgress struct {
	ID          int64              `json:"id"`
	TreatmentID pgtype.Int8        `json:"treatment_id"`
	PhaseID     pgtype.Int8        `json:"phase_id"`
	StartDate   pgtype.Date        `json:"start_date"`
	EndDate     pgtype.Date        `json:"end_date"`
	Status      pgtype.Text        `json:"status"`
	Notes       pgtype.Text        `json:"notes"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
}

>>>>>>> 6c35562 (dicease and treatment plan)
type User struct {
	ID              int64            `json:"id"`
	Username        string           `json:"username"`
	HashedPassword  string           `json:"hashed_password"`
	FullName        string           `json:"full_name"`
	Email           string           `json:"email"`
	PhoneNumber     pgtype.Text      `json:"phone_number"`
	Address         pgtype.Text      `json:"address"`
	DataImage       []byte           `json:"data_image"`
<<<<<<< HEAD
<<<<<<< HEAD
	OriginalImage   pgtype.Text      `json:"original_image"`
=======
	OriginalImage   string           `json:"original_image"`
>>>>>>> 0fb3f30 (user images)
=======
	OriginalImage   pgtype.Text      `json:"original_image"`
>>>>>>> 272832d (redis cache)
	Role            pgtype.Text      `json:"role"`
	Status          pgtype.Text      `json:"status"`
	CreatedAt       pgtype.Timestamp `json:"created_at"`
	IsVerifiedEmail pgtype.Bool      `json:"is_verified_email"`
	RemovedAt       pgtype.Timestamp `json:"removed_at"`
}

type Vaccination struct {
	Vaccinationid    int64            `json:"vaccinationid"`
	Petid            pgtype.Int8      `json:"petid"`
	Vaccinename      string           `json:"vaccinename"`
	Dateadministered pgtype.Timestamp `json:"dateadministered"`
	Nextduedate      pgtype.Timestamp `json:"nextduedate"`
	Vaccineprovider  pgtype.Text      `json:"vaccineprovider"`
	Batchnumber      pgtype.Text      `json:"batchnumber"`
	Notes            pgtype.Text      `json:"notes"`
}

type VerifyEmail struct {
	ID         int64            `json:"id"`
	Username   string           `json:"username"`
	Email      string           `json:"email"`
	SecretCode int64            `json:"secret_code"`
	IsUsed     bool             `json:"is_used"`
	CreatedAt  pgtype.Timestamp `json:"created_at"`
	ExpiredAt  pgtype.Timestamp `json:"expired_at"`
}
